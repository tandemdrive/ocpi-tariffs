[workspace.package]
version = "0.6.1"
edition = "2021"
readme = "README.md"
repository = "https://github.com/tandemdrive/ocpi-tariffs"
description = "OCPI tariff calculations"
license = "MIT OR Apache-2.0"

[workspace]
members = ["cli", "ocpi-tariffs"]
resolver = "2"

[workspace.dependencies]
chrono-tz = { version = "0.9.0", default-features = false, features = ["std"] }
serde_json = { version = "1.0.117", default-features = false }
serde = { version = "1.0.203", features = ["derive"] }

# use only "allow" and "warn" for lints (both rustc and clippy)
# the xtask CI task will fail on warnings but
# we only want the warnings during local development
[workspace.lints.rust]
# Lint groups are set to warn so new lints are used as they become available
future_incompatible = { level = "warn", priority = -1 }
let_underscore = { level = "warn", priority = -1 }
nonstandard-style = { level = "warn", priority = -1 }
rust_2018_compatibility = { level = "warn", priority = -1 }
rust_2018_idioms = { level = "warn", priority = -1 }
rust_2021_compatibility = { level = "warn", priority = -1 }
unused = { level = "warn", priority = -1 }
warnings = { level = "warn", priority = -1 }

# 2024 compatibility is allow for now and will be fixed in a near-future PR
rust_2024_compatibility = { level = "allow", priority = -2 }

# We also warn on a set of individual lints that are ont included in any group
async_fn_in_trait = "warn"
dead_code = "warn"
trivial_casts = "warn"
trivial_numeric_casts = "warn"
unsafe_code = "warn"
unused_import_braces = "warn"
unused_lifetimes = "warn"
unused_macro_rules = "warn"
unused_qualifications = "warn"

[workspace.lints.clippy]
# Lint groups are set to warn so new lints are used as they become available
complexity = { level = "warn", priority = -1 }
correctness = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
perf = { level = "warn", priority = -1 }
style = { level = "warn", priority = -1 }
suspicious = { level = "warn", priority = -1 }

# These lints are explicitly allowed as they don't provide value for TD.
doc_markdown = "allow"
missing_panics_doc = "allow"
missing_errors_doc = "allow"
map_unwrap_or = "allow"      # we prefer to `map(a).unwrap_or(b)` as it's clear what the fallback value is 

# # These lints are allowed, but we want to deny them over time
# default_trait_access = "allow"
# into_iter_without_iter = "allow"
# items_after_statements = "allow"
# large_futures = "allow"
# module_name_repetitions = "allow"
# must_use_candidate = "allow"
# needless_pass_by_value = "allow"
# similar_names = "allow"
# struct_excessive_bools = "allow"
# struct_field_names = "allow"
# too_many_lines = "allow"
# trivially_copy_pass_by_ref = "allow"
